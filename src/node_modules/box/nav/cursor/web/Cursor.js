import { Grid }             from '@material-ui/core'

import React, { Component } from 'react'
import compose              from 'recompose/compose'
import withPropsOnChange    from 'recompose/withPropsOnChange'
import posed                from 'react-pose'
import styled               from 'styled-components'


import poseMap              from '../api/poseMap'


const Pointer = styled.div.attrs(({ position: { x, y } }) => ({
  style: {
    left: x,
    top: y,
  }
}))`
  left: 0;
  top: 0;

  position: fixed;

  margin-left: -15px;
  margin-top: -15px;

  display: ${ ({ isActive }) => isActive ? 'block' : 'none' };

  pointer-events: none;

  z-index: 1000;
`

const Animation = styled(
  posed.div({
    [poseMap.DEFAULT]: {
      background: '#14D790',
      scale: 1,
    },
    [poseMap.SMALL]: {
      background: '#14D790',
      scale: 0.4,
      transition: { type: 'spring', stiffness: 300 },
    },
    [poseMap.MEDIUM]: {
      background: '#D71490',
      scale: 1.6,
      transition: { type: 'spring', stiffness: 300 },
    },
    [poseMap.HINT]: {
      background: '#14D790',
      scale: 1.4,
      transition: { type: 'spring', stiffness: 300 },
    },
  })
)`
  background-color: #14D790;
  border-radius: 50%;

  width: 30px;
  height: 30px;  
`

const Content = styled(Grid)`
  width: 100%;
  height: 100%;

  line-height: 0px;

  font-weight: bold;
  font-size: 60%;
`

const enhance = compose(
)

const Cursor = enhance((props) => {
  const {
    content,
    isActive,
    pose
  } = props

  return (
    <Pointer {...props}>
      <Animation pose={pose}>
        {pose === poseMap.HINT ? (
          <Content alignItems='center' container justify='center'>
            <Grid item>
              {content}
            </Grid>
          </Content>
        ) : null }
      </Animation>
    </Pointer>
  )
})

export default Cursor